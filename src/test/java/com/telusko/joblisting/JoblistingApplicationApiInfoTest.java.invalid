// This test file is marked invalid as it contains compilation errors. Change the extension to of this file to .java, to manually edit its contents


// ********RoostGPT********
/*
Test generated by RoostGPT for test akshit3dec using AI Type Vertex AI and AI Model code-bison-32k

ROOST_METHOD_HASH=apiInfo_b15996cb2b
ROOST_METHOD_SIG_HASH=apiInfo_95b025c193

 **Test Scenario 1: Default ApiInfo Builder Construction**

**TestName:** apiInfoBuildsDefaultApiInfo

**Description:**
This test verifies that the apiInfo() method successfully creates an ApiInfo object using the default ApiInfoBuilder settings.

**Execution:**
**Arrange:**
- None

**Act:**
- Invoke the apiInfo() method.

**Assert:**
- Assert that the returned ApiInfo object is not null.
- Assert that the ApiInfo object's title, description, version, terms of service, contact information, license, and license URL are all null or empty strings.

**Validation:**
This test ensures that the apiInfo() method can create a basic ApiInfo object with default values, as expected when no customization is provided. It serves as a sanity check for the method's functionality.

**Test Scenario 2: Null ApiInfoBuilder Handling**

**TestName:** apiInfoHandlesNullApiInfoBuilder

**Description:**
This test checks how the apiInfo() method responds when provided with a null ApiInfoBuilder instance.

**Execution:**
**Arrange:**
- Create a null ApiInfoBuilder instance.

**Act:**
- Invoke the apiInfo() method with the null ApiInfoBuilder.

**Assert:**
- Assert that the returned ApiInfo object is not null.
- Assert that the ApiInfo object's title, description, version, terms of service, contact information, license, and license URL are all null or empty strings.

**Validation:**
This test ensures that the apiInfo() method can gracefully handle a null ApiInfoBuilder and still create a basic ApiInfo object with default values. It tests the method's robustness against unexpected input.

**Test Scenario 3: Custom ApiInfoBuilder Configuration**

**TestName:** apiInfoBuildsCustomApiInfo

**Description:**
This test verifies that the apiInfo() method can successfully create an ApiInfo object with custom settings provided through the ApiInfoBuilder.

**Execution:**
**Arrange:**
- Create an ApiInfoBuilder instance and set custom values for its various properties, such as title, description, version, terms of service, contact information, license, and license URL.

**Act:**
- Invoke the apiInfo() method with the customized ApiInfoBuilder.

**Assert:**
- Assert that the returned ApiInfo object is not null.
- Assert that the ApiInfo object's properties match the custom values set in the ApiInfoBuilder.

**Validation:**
This test confirms that the apiInfo() method can correctly apply custom configurations to the ApiInfo object, allowing for flexible customization of API documentation metadata. It demonstrates the method's ability to generate ApiInfo objects based on specific requirements.
*/

// ********RoostGPT********

package com.telusko.joblisting;
import com.telusko.joblisting.JoblistingApplication;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import springfox.documentation.service.ApiInfo;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.*;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.web.bind.annotation.RestController;
import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

@SpringBootTest
@Tag("valid")
class JoblistingApplicationApiInfoTest {
    @Test
    @DisplayName("Default ApiInfo Builder Construction")
    void apiInfoBuildsDefaultApiInfo() {
        // Arrange: None
        // Act
        ApiInfo apiInfo = new JoblistingApplication().apiInfo();
        // Assert
        assertNotNull(apiInfo);
        assertEquals("", apiInfo.getTitle());
        assertEquals("", apiInfo.getDescription());
        assertEquals("", apiInfo.getVersion());
        assertEquals("", apiInfo.getTermsOfServiceUrl());
        assertEquals("", apiInfo.getContact().getName());
        assertEquals("", apiInfo.getContact().getEmail());
        assertEquals("", apiInfo.getContact().getUrl());
        assertEquals("", apiInfo.getLicense());
        assertEquals("", apiInfo.getLicenseUrl());
    }
    @Test
    @DisplayName("Null ApiInfoBuilder Handling")
    void apiInfoHandlesNullApiInfoBuilder() {
        // Arrange
        ApiInfoBuilder apiInfoBuilder = null;
        // Act
        ApiInfo apiInfo = new JoblistingApplication().apiInfo(apiInfoBuilder);
        // Assert
        assertNotNull(apiInfo);
        assertEquals("", apiInfo.getTitle());
        assertEquals("", apiInfo.getDescription());
        assertEquals("", apiInfo.getVersion());
        assertEquals("", apiInfo.getTermsOfServiceUrl());
        assertEquals("", apiInfo.getContact().getName());
        assertEquals("", apiInfo.getContact().getEmail());
        assertEquals("", apiInfo.getContact().getUrl());
        assertEquals("", apiInfo.getLicense());
        assertEquals("", apiInfo.getLicenseUrl());
    }
    @Test
    @DisplayName("Custom ApiInfoBuilder Configuration")
    @Tag("integration")
    void apiInfoBuildsCustomApiInfo() {
        // Arrange
        ApiInfoBuilder apiInfoBuilder = new ApiInfoBuilder();
        apiInfoBuilder.title("Custom Title")
                .description("Custom Description")
                .version("1.0")
                .termsOfServiceUrl("https://example.com/terms")
                .contact("John Doe")
                .contact("john.doe@example.com")
                .contact("https://example.com/contact")
                .license("Apache License 2.0")
                .licenseUrl("https://www.apache.org/licenses/LICENSE-2.0");
        // Act
        ApiInfo apiInfo = new JoblistingApplication().apiInfo(apiInfoBuilder);
        // Assert
        assertNotNull(apiInfo);
        assertEquals("Custom Title", apiInfo.getTitle());
        assertEquals("Custom Description", apiInfo.getDescription());
        assertEquals("1.0", apiInfo.getVersion());
        assertEquals("https://example.com/terms", apiInfo.getTermsOfServiceUrl());
        assertEquals("John Doe", apiInfo.getContact().getName());
        assertEquals("john.doe@example.com", apiInfo.getContact().getEmail());
        assertEquals("https://example.com/contact", apiInfo.getContact().getUrl());
        assertEquals("Apache License 2.0", apiInfo.getLicense());
        assertEquals("https://www.apache.org/licenses/LICENSE-2.0", apiInfo.getLicenseUrl());
    }
}