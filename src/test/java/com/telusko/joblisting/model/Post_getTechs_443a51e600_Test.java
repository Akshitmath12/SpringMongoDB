/*
Test generated by RoostGPT for test Java_test using AI Type Vertex AI and AI Model code-bison-32k

 **Test Scenario 1: Check if techs array is not null**

* **Test Data**: Create a `Tech` object with a non-null `techs` array.
* **Expected Result**: The `getTechs()` method should return the non-null `techs` array.

**Test Scenario 2: Check if techs array is empty**

* **Test Data**: Create a `Tech` object with an empty `techs` array.
* **Expected Result**: The `getTechs()` method should return an empty array.

**Test Scenario 3: Check if techs array contains duplicate values**

* **Test Data**: Create a `Tech` object with a `techs` array that contains duplicate values.
* **Expected Result**: The `getTechs()` method should return an array with the duplicate values removed.

**Test Scenario 4: Check if techs array contains invalid values**

* **Test Data**: Create a `Tech` object with a `techs` array that contains invalid values (e.g., null, empty strings, etc.).
* **Expected Result**: The `getTechs()` method should return an array with the invalid values removed.

**Test Scenario 5: Check if techs array is sorted**

* **Test Data**: Create a `Tech` object with a `techs` array that is not sorted.
* **Expected Result**: The `getTechs()` method should return an array that is sorted in ascending order.
*/
package com.telusko.joblisting.model;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.data.mongodb.core.mapping.Document;

import java.util.Arrays;

@Document("Post")
public class Post_getTechs_443a51e600_Test {

    @Test
    @DisplayName("Test Scenario 1: Check if techs array is not null")
    void testGetTechs_NotNull() {
        // Given
        Post post = new Post();
        String[] techs = {"Java", "Spring Boot", "MongoDB"};
        post.setTechs(techs);

        // When
        String[] actualTechs = post.getTechs();

        // Then
        assertNotNull(actualTechs);
        assertEquals(techs, actualTechs);
    }

    @Test
    @DisplayName("Test Scenario 2: Check if techs array is empty")
    void testGetTechs_EmptyArray() {
        // Given
        Post post = new Post();
        String[] techs = {};
        post.setTechs(techs);

        // When
        String[] actualTechs = post.getTechs();

        // Then
        assertNotNull(actualTechs);
        assertEquals(techs, actualTechs);
    }

    @Test
    @DisplayName("Test Scenario 3: Check if techs array contains duplicate values")
    void testGetTechs_WithDuplicates() {
        // Given
        Post post = new Post();
        String[] techs = {"Java", "Spring Boot", "Java", "MongoDB"};
        post.setTechs(techs);

        // When
        String[] actualTechs = post.getTechs();

        // Then
        assertNotNull(actualTechs);
        assertEquals(3, actualTechs.length);
        assertEquals(Arrays.asList("Java", "Spring Boot", "MongoDB"), Arrays.asList(actualTechs));
    }

    @Test
    @DisplayName("Test Scenario 4: Check if techs array contains invalid values")
    void testGetTechs_WithInvalidValues() {
        // Given
        Post post = new Post();
        String[] techs = {"Java", null, "", "MongoDB"};
        post.setTechs(techs);

        // When
        String[] actualTechs = post.getTechs();

        // Then
        assertNotNull(actualTechs);
        assertEquals(3, actualTechs.length);
        assertEquals(Arrays.asList("Java", "MongoDB"), Arrays.asList(actualTechs));
    }

    @Test
    @DisplayName("Test Scenario 5: Check if techs array is sorted")
    void testGetTechs_SortedArray() {
        // Given
        Post post = new Post();
        String[] techs = {"MongoDB", "Java", "Spring Boot"};
        post.setTechs(techs);

        // When
        String[] actualTechs = post.getTechs();

        // Then
        assertNotNull(actualTechs);
        assertEquals(3, actualTechs.length);
        assertEquals(Arrays.asList("Java", "MongoDB", "Spring Boot"), Arrays.asList(actualTechs));
    }
}
