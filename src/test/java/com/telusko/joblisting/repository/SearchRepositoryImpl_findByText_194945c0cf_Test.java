// Test generated by RoostGPT for test JavaUnitTest using AI Type Open AI and AI Model gpt-4

package com.telusko.joblisting.repository;

import com.mongodb.client.AggregateIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.telusko.joblisting.model.Post;
import org.bson.Document;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.data.mongodb.core.convert.MongoConverter;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class SearchRepositoryImpl_findByText_194945c0cf_Test {

    @InjectMocks
    SearchRepositoryImpl searchRepository;

    @Mock
    MongoClient client;

    @Mock
    MongoDatabase database;

    @Mock
    MongoCollection<Document> collection;

    @Mock
    MongoConverter converter;

    @Test
    public void testFindByText_Success() {
        String text = "Java Developer";
        Post post = new Post();
        post.setProfile("Java Developer");
        post.setDesc("Required experience in Spring and Hibernate");
        post.setExp(3);
        post.setTechs(new String[]{"Java", "Spring", "Hibernate"});

        when(client.getDatabase(anyString())).thenReturn(database);
        when(database.getCollection(anyString())).thenReturn(collection);
        when(converter.read(any(), any())).thenReturn(post);

        List<Post> posts = searchRepository.findByText(text);

        assertEquals(1, posts.size());
        assertEquals(post, posts.get(0));

        verify(client, times(1)).getDatabase(anyString());
        verify(database, times(1)).getCollection(anyString());
        verify(converter, times(1)).read(any(), any());
    }

    @Test
    public void testFindByText_EmptyResult() {
        String text = "Python Developer";

        when(client.getDatabase(anyString())).thenReturn(database);
        when(database.getCollection(anyString())).thenReturn(collection);

        List<Post> posts = searchRepository.findByText(text);

        assertEquals(0, posts.size());

        verify(client, times(1)).getDatabase(anyString());
        verify(database, times(1)).getCollection(anyString());
        verify(converter, never()).read(any(), any());
    }
}
