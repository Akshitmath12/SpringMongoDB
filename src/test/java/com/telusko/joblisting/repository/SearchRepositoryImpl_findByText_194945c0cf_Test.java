// Test generated by RoostGPT for test JavaUnitTest using AI Type Open AI and AI Model gpt-4

package com.telusko.joblisting.repository;

import com.mongodb.client.AggregateIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.telusko.joblisting.model.Post;
import org.bson.Document;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.data.mongodb.core.convert.MongoConverter;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class SearchRepositoryImpl_findByText_194945c0cf_Test {

    @Mock
    private MongoClient client;

    @Mock
    private MongoConverter converter;

    private SearchRepositoryImpl repository;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);
        repository = new SearchRepositoryImpl(client, converter);
    }

    @Test
    public void testFindByText_Success() {
        String text = "Java";
        MongoDatabase database = mock(MongoDatabase.class);
        MongoCollection<Document> collection = mock(MongoCollection.class);
        AggregateIterable<Document> result = mock(AggregateIterable.class);

        when(client.getDatabase("telusko")).thenReturn(database);
        when(database.getCollection("JobPost")).thenReturn(collection);
        when(collection.aggregate(anyList())).thenReturn(result);

        Post post = new Post();
        post.setProfile("Java Developer");
        post.setDesc("Java, Spring Boot");
        post.setExp(5);
        post.setTechs(new String[]{"Java", "Spring Boot"});
        when(converter.read(Post.class, any())).thenReturn(post);

        List<Post> posts = repository.findByText(text);

        assertNotNull(posts);
        assertEquals(1, posts.size());
        assertEquals(post, posts.get(0));
    }

    @Test
    public void testFindByText_Failure() {
        String text = "Java";
        MongoDatabase database = mock(MongoDatabase.class);
        MongoCollection<Document> collection = mock(MongoCollection.class);
        AggregateIterable<Document> result = mock(AggregateIterable.class);

        when(client.getDatabase("telusko")).thenReturn(database);
        when(database.getCollection("JobPost")).thenReturn(collection);
        when(collection.aggregate(anyList())).thenReturn(result);

        when(converter.read(Post.class, any())).thenReturn(null);

        List<Post> posts = repository.findByText(text);

        assertNotNull(posts);
        assertEquals(0, posts.size());
    }
}
