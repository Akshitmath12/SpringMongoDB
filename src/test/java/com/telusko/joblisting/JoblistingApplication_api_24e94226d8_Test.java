// Test generated by RoostGPT for test JavaUnitTest using AI Type Open AI and AI Model gpt-4

package com.telusko.joblisting;

import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.mock;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.web.bind.annotation.RestController;
import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;

public class JoblistingApplication_api_24e94226d8_Test {

    private JoblistingApplication joblistingApplication;

    @BeforeEach
    public void setup() {
        joblistingApplication = new JoblistingApplication();
    }

    @Test
    public void testApi() {
        Docket docket = joblistingApplication.api();

        assertEquals(DocumentationType.SWAGGER_2, docket.getDocumentationType());
        assertEquals(false, docket.isUseDefaultResponseMessages());
    }

    @Test
    public void testApiInfo() {
        ApiInfo apiInfo = mock(ApiInfo.class);
        when(apiInfo.getTitle()).thenReturn("Test API");
        when(apiInfo.getDescription()).thenReturn("API for testing");
        when(apiInfo.getVersion()).thenReturn("1.0");

        Docket docket = new Docket(DocumentationType.SWAGGER_2)
                             .select()
                             .apis(RequestHandlerSelectors.withClassAnnotation(RestController.class))
                             .paths(PathSelectors.any())
                             .build()
                             .apiInfo(apiInfo)
                             .useDefaultResponseMessages(false);

        assertEquals(apiInfo, docket.getApiInfo());
    }
}
