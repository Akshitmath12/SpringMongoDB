// Test generated by RoostGPT for test JavaUnitTest using AI Type Open AI and AI Model gpt-4

package com.telusko.joblisting;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.beans.factory.annotation.Autowired;
import springfox.documentation.service.ApiInfo;

@SpringBootTest
public class JoblistingApplication_apiInfo_0779216cdc_Test {

    @Autowired
    private JoblistingApplication joblistingApplication;

    private ApiInfo apiInfo;

    @BeforeEach
    public void setUp() {
        apiInfo = joblistingApplication.apiInfo();
    }

    @Test
    public void testApiInfoNotNull() {
        assertNotNull(apiInfo, "ApiInfo object should not be null");
    }

    @Test
    public void testApiInfoProperties() {
        // TODO: Here, replace 'expectedTitle', 'expectedDescription', etc. with the expected values
        String expectedTitle = "Joblisting API";
        String expectedDescription = "API for Job Listing";
        String expectedVersion = "1.0";
        String expectedTermsOfServiceUrl = "http://www.joblisting.com";
        String expectedLicense = "Apache 2.0";
        String expectedLicenseUrl = "http://www.apache.org/licenses/LICENSE-2.0.html";

        assertEquals(expectedTitle, apiInfo.getTitle(), "ApiInfo title does not match expected value");
        assertEquals(expectedDescription, apiInfo.getDescription(), "ApiInfo description does not match expected value");
        assertEquals(expectedVersion, apiInfo.getVersion(), "ApiInfo version does not match expected value");
        assertEquals(expectedTermsOfServiceUrl, apiInfo.getTermsOfServiceUrl(), "ApiInfo terms of service URL does not match expected value");
        assertEquals(expectedLicense, apiInfo.getLicense(), "ApiInfo license does not match expected value");
        assertEquals(expectedLicenseUrl, apiInfo.getLicenseUrl(), "ApiInfo license URL does not match expected value");
    }
}
